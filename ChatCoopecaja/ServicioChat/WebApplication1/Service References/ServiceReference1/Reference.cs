//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IWebChat")]
    public interface IWebChat {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/Obtenerservicio", ReplyAction="http://tempuri.org/IWebChat/ObtenerservicioResponse")]
        int Obtenerservicio();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/Obtenerservicio", ReplyAction="http://tempuri.org/IWebChat/ObtenerservicioResponse")]
        System.Threading.Tasks.Task<int> ObtenerservicioAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RegistrarUsuarioWeb", ReplyAction="http://tempuri.org/IWebChat/RegistrarUsuarioWebResponse")]
        void RegistrarUsuarioWeb(string pNombre, string pTelefono, string pEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RegistrarUsuarioWeb", ReplyAction="http://tempuri.org/IWebChat/RegistrarUsuarioWebResponse")]
        System.Threading.Tasks.Task RegistrarUsuarioWebAsync(string pNombre, string pTelefono, string pEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RegistrarUsuarioInterno", ReplyAction="http://tempuri.org/IWebChat/RegistrarUsuarioInternoResponse")]
        int RegistrarUsuarioInterno(int pid, string pNombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RegistrarUsuarioInterno", ReplyAction="http://tempuri.org/IWebChat/RegistrarUsuarioInternoResponse")]
        System.Threading.Tasks.Task<int> RegistrarUsuarioInternoAsync(int pid, string pNombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/CrearChat", ReplyAction="http://tempuri.org/IWebChat/CrearChatResponse")]
        int CrearChat(string pNombre, string pTelefono, string pEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/CrearChat", ReplyAction="http://tempuri.org/IWebChat/CrearChatResponse")]
        System.Threading.Tasks.Task<int> CrearChatAsync(string pNombre, string pTelefono, string pEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/CrearMensaje", ReplyAction="http://tempuri.org/IWebChat/CrearMensajeResponse")]
        int CrearMensaje(int pIdChat, string pTipo, string pTextoMensaje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/CrearMensaje", ReplyAction="http://tempuri.org/IWebChat/CrearMensajeResponse")]
        System.Threading.Tasks.Task<int> CrearMensajeAsync(int pIdChat, string pTipo, string pTextoMensaje);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RecibirMensajes", ReplyAction="http://tempuri.org/IWebChat/RecibirMensajesResponse")]
        ServicioChat.ListaMensaje[] RecibirMensajes(int pIdChat, string pTipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RecibirMensajes", ReplyAction="http://tempuri.org/IWebChat/RecibirMensajesResponse")]
        System.Threading.Tasks.Task<ServicioChat.ListaMensaje[]> RecibirMensajesAsync(int pIdChat, string pTipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerChat", ReplyAction="http://tempuri.org/IWebChat/ObtenerChatResponse")]
        ServicioChat.Chat ObtenerChat(int pIdChat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerChat", ReplyAction="http://tempuri.org/IWebChat/ObtenerChatResponse")]
        System.Threading.Tasks.Task<ServicioChat.Chat> ObtenerChatAsync(int pIdChat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RegistraSalidaUsuarioWeb", ReplyAction="http://tempuri.org/IWebChat/RegistraSalidaUsuarioWebResponse")]
        int RegistraSalidaUsuarioWeb(int pidChat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RegistraSalidaUsuarioWeb", ReplyAction="http://tempuri.org/IWebChat/RegistraSalidaUsuarioWebResponse")]
        System.Threading.Tasks.Task<int> RegistraSalidaUsuarioWebAsync(int pidChat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RegistraSalidaUsuarioInterno", ReplyAction="http://tempuri.org/IWebChat/RegistraSalidaUsuarioInternoResponse")]
        int RegistraSalidaUsuarioInterno(int pid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RegistraSalidaUsuarioInterno", ReplyAction="http://tempuri.org/IWebChat/RegistraSalidaUsuarioInternoResponse")]
        System.Threading.Tasks.Task<int> RegistraSalidaUsuarioInternoAsync(int pid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/HabilitarUsuarioInterno", ReplyAction="http://tempuri.org/IWebChat/HabilitarUsuarioInternoResponse")]
        int HabilitarUsuarioInterno(int pid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/HabilitarUsuarioInterno", ReplyAction="http://tempuri.org/IWebChat/HabilitarUsuarioInternoResponse")]
        System.Threading.Tasks.Task<int> HabilitarUsuarioInternoAsync(int pid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerListaClientes", ReplyAction="http://tempuri.org/IWebChat/ObtenerListaClientesResponse")]
        ServicioChat.ListaCliente[] ObtenerListaClientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerListaClientes", ReplyAction="http://tempuri.org/IWebChat/ObtenerListaClientesResponse")]
        System.Threading.Tasks.Task<ServicioChat.ListaCliente[]> ObtenerListaClientesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/verificar_chat", ReplyAction="http://tempuri.org/IWebChat/verificar_chatResponse")]
        int verificar_chat(int idChat, string pTipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/verificar_chat", ReplyAction="http://tempuri.org/IWebChat/verificar_chatResponse")]
        System.Threading.Tasks.Task<int> verificar_chatAsync(int idChat, string pTipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerNombre", ReplyAction="http://tempuri.org/IWebChat/ObtenerNombreResponse")]
        string ObtenerNombre(int pidChat, string pTipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerNombre", ReplyAction="http://tempuri.org/IWebChat/ObtenerNombreResponse")]
        System.Threading.Tasks.Task<string> ObtenerNombreAsync(int pidChat, string pTipo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/verificarteclado", ReplyAction="http://tempuri.org/IWebChat/verificartecladoResponse")]
        int verificarteclado(int pidChat, string pTipo, int pestado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/verificarteclado", ReplyAction="http://tempuri.org/IWebChat/verificartecladoResponse")]
        System.Threading.Tasks.Task<int> verificartecladoAsync(int pidChat, string pTipo, int pestado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/AsignarChat", ReplyAction="http://tempuri.org/IWebChat/AsignarChatResponse")]
        int AsignarChat(int pIdChat, int pid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/AsignarChat", ReplyAction="http://tempuri.org/IWebChat/AsignarChatResponse")]
        System.Threading.Tasks.Task<int> AsignarChatAsync(int pIdChat, int pid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWebChatChannel : WebApplication1.ServiceReference1.IWebChat, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebChatClient : System.ServiceModel.ClientBase<WebApplication1.ServiceReference1.IWebChat>, WebApplication1.ServiceReference1.IWebChat {
        
        public WebChatClient() {
        }
        
        public WebChatClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebChatClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebChatClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebChatClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Obtenerservicio() {
            return base.Channel.Obtenerservicio();
        }
        
        public System.Threading.Tasks.Task<int> ObtenerservicioAsync() {
            return base.Channel.ObtenerservicioAsync();
        }
        
        public void RegistrarUsuarioWeb(string pNombre, string pTelefono, string pEmail) {
            base.Channel.RegistrarUsuarioWeb(pNombre, pTelefono, pEmail);
        }
        
        public System.Threading.Tasks.Task RegistrarUsuarioWebAsync(string pNombre, string pTelefono, string pEmail) {
            return base.Channel.RegistrarUsuarioWebAsync(pNombre, pTelefono, pEmail);
        }
        
        public int RegistrarUsuarioInterno(int pid, string pNombre) {
            return base.Channel.RegistrarUsuarioInterno(pid, pNombre);
        }
        
        public System.Threading.Tasks.Task<int> RegistrarUsuarioInternoAsync(int pid, string pNombre) {
            return base.Channel.RegistrarUsuarioInternoAsync(pid, pNombre);
        }
        
        public int CrearChat(string pNombre, string pTelefono, string pEmail) {
            return base.Channel.CrearChat(pNombre, pTelefono, pEmail);
        }
        
        public System.Threading.Tasks.Task<int> CrearChatAsync(string pNombre, string pTelefono, string pEmail) {
            return base.Channel.CrearChatAsync(pNombre, pTelefono, pEmail);
        }
        
        public int CrearMensaje(int pIdChat, string pTipo, string pTextoMensaje) {
            return base.Channel.CrearMensaje(pIdChat, pTipo, pTextoMensaje);
        }
        
        public System.Threading.Tasks.Task<int> CrearMensajeAsync(int pIdChat, string pTipo, string pTextoMensaje) {
            return base.Channel.CrearMensajeAsync(pIdChat, pTipo, pTextoMensaje);
        }
        
        public ServicioChat.ListaMensaje[] RecibirMensajes(int pIdChat, string pTipo) {
            return base.Channel.RecibirMensajes(pIdChat, pTipo);
        }
        
        public System.Threading.Tasks.Task<ServicioChat.ListaMensaje[]> RecibirMensajesAsync(int pIdChat, string pTipo) {
            return base.Channel.RecibirMensajesAsync(pIdChat, pTipo);
        }
        
        public ServicioChat.Chat ObtenerChat(int pIdChat) {
            return base.Channel.ObtenerChat(pIdChat);
        }
        
        public System.Threading.Tasks.Task<ServicioChat.Chat> ObtenerChatAsync(int pIdChat) {
            return base.Channel.ObtenerChatAsync(pIdChat);
        }
        
        public int RegistraSalidaUsuarioWeb(int pidChat) {
            return base.Channel.RegistraSalidaUsuarioWeb(pidChat);
        }
        
        public System.Threading.Tasks.Task<int> RegistraSalidaUsuarioWebAsync(int pidChat) {
            return base.Channel.RegistraSalidaUsuarioWebAsync(pidChat);
        }
        
        public int RegistraSalidaUsuarioInterno(int pid) {
            return base.Channel.RegistraSalidaUsuarioInterno(pid);
        }
        
        public System.Threading.Tasks.Task<int> RegistraSalidaUsuarioInternoAsync(int pid) {
            return base.Channel.RegistraSalidaUsuarioInternoAsync(pid);
        }
        
        public int HabilitarUsuarioInterno(int pid) {
            return base.Channel.HabilitarUsuarioInterno(pid);
        }
        
        public System.Threading.Tasks.Task<int> HabilitarUsuarioInternoAsync(int pid) {
            return base.Channel.HabilitarUsuarioInternoAsync(pid);
        }
        
        public ServicioChat.ListaCliente[] ObtenerListaClientes() {
            return base.Channel.ObtenerListaClientes();
        }
        
        public System.Threading.Tasks.Task<ServicioChat.ListaCliente[]> ObtenerListaClientesAsync() {
            return base.Channel.ObtenerListaClientesAsync();
        }
        
        public int verificar_chat(int idChat, string pTipo) {
            return base.Channel.verificar_chat(idChat, pTipo);
        }
        
        public System.Threading.Tasks.Task<int> verificar_chatAsync(int idChat, string pTipo) {
            return base.Channel.verificar_chatAsync(idChat, pTipo);
        }
        
        public string ObtenerNombre(int pidChat, string pTipo) {
            return base.Channel.ObtenerNombre(pidChat, pTipo);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerNombreAsync(int pidChat, string pTipo) {
            return base.Channel.ObtenerNombreAsync(pidChat, pTipo);
        }
        
        public int verificarteclado(int pidChat, string pTipo, int pestado) {
            return base.Channel.verificarteclado(pidChat, pTipo, pestado);
        }
        
        public System.Threading.Tasks.Task<int> verificartecladoAsync(int pidChat, string pTipo, int pestado) {
            return base.Channel.verificartecladoAsync(pidChat, pTipo, pestado);
        }
        
        public int AsignarChat(int pIdChat, int pid) {
            return base.Channel.AsignarChat(pIdChat, pid);
        }
        
        public System.Threading.Tasks.Task<int> AsignarChatAsync(int pIdChat, int pid) {
            return base.Channel.AsignarChatAsync(pIdChat, pid);
        }
    }
}
