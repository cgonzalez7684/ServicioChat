//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace App.ServicioChat {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListaMensaje", Namespace="http://schemas.datacontract.org/2004/07/ServicioChat")]
    [System.SerializableAttribute()]
    public partial class ListaMensaje : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextoMensajeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string linkMsjField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextoMensaje {
            get {
                return this.TextoMensajeField;
            }
            set {
                if ((object.ReferenceEquals(this.TextoMensajeField, value) != true)) {
                    this.TextoMensajeField = value;
                    this.RaisePropertyChanged("TextoMensaje");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string linkMsj {
            get {
                return this.linkMsjField;
            }
            set {
                if ((object.ReferenceEquals(this.linkMsjField, value) != true)) {
                    this.linkMsjField = value;
                    this.RaisePropertyChanged("linkMsj");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Chat", Namespace="http://schemas.datacontract.org/2004/07/ServicioChat")]
    [System.SerializableAttribute()]
    public partial class Chat : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CalificacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComentarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ComentarioIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EstTecladoEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EstTecladoIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FechaAtencionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FechaFinalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdChatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private App.ServicioChat.Mensaje[] ListaMensajesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UCierraField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UltimoMensajeEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UltimoMensajeIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dirIpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int estadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private App.ServicioChat.Cliente pObjClienteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private App.ServicioChat.Empleado pObjEmpleadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string zonaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Calificacion {
            get {
                return this.CalificacionField;
            }
            set {
                if ((this.CalificacionField.Equals(value) != true)) {
                    this.CalificacionField = value;
                    this.RaisePropertyChanged("Calificacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comentario {
            get {
                return this.ComentarioField;
            }
            set {
                if ((object.ReferenceEquals(this.ComentarioField, value) != true)) {
                    this.ComentarioField = value;
                    this.RaisePropertyChanged("Comentario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ComentarioI {
            get {
                return this.ComentarioIField;
            }
            set {
                if ((object.ReferenceEquals(this.ComentarioIField, value) != true)) {
                    this.ComentarioIField = value;
                    this.RaisePropertyChanged("ComentarioI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EstTecladoE {
            get {
                return this.EstTecladoEField;
            }
            set {
                if ((this.EstTecladoEField.Equals(value) != true)) {
                    this.EstTecladoEField = value;
                    this.RaisePropertyChanged("EstTecladoE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EstTecladoI {
            get {
                return this.EstTecladoIField;
            }
            set {
                if ((this.EstTecladoIField.Equals(value) != true)) {
                    this.EstTecladoIField = value;
                    this.RaisePropertyChanged("EstTecladoI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FechaAtencion {
            get {
                return this.FechaAtencionField;
            }
            set {
                if ((this.FechaAtencionField.Equals(value) != true)) {
                    this.FechaAtencionField = value;
                    this.RaisePropertyChanged("FechaAtencion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FechaFinal {
            get {
                return this.FechaFinalField;
            }
            set {
                if ((this.FechaFinalField.Equals(value) != true)) {
                    this.FechaFinalField = value;
                    this.RaisePropertyChanged("FechaFinal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdChat {
            get {
                return this.IdChatField;
            }
            set {
                if ((this.IdChatField.Equals(value) != true)) {
                    this.IdChatField = value;
                    this.RaisePropertyChanged("IdChat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public App.ServicioChat.Mensaje[] ListaMensajes {
            get {
                return this.ListaMensajesField;
            }
            set {
                if ((object.ReferenceEquals(this.ListaMensajesField, value) != true)) {
                    this.ListaMensajesField = value;
                    this.RaisePropertyChanged("ListaMensajes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UCierra {
            get {
                return this.UCierraField;
            }
            set {
                if ((object.ReferenceEquals(this.UCierraField, value) != true)) {
                    this.UCierraField = value;
                    this.RaisePropertyChanged("UCierra");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UltimoMensajeE {
            get {
                return this.UltimoMensajeEField;
            }
            set {
                if ((this.UltimoMensajeEField.Equals(value) != true)) {
                    this.UltimoMensajeEField = value;
                    this.RaisePropertyChanged("UltimoMensajeE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UltimoMensajeI {
            get {
                return this.UltimoMensajeIField;
            }
            set {
                if ((this.UltimoMensajeIField.Equals(value) != true)) {
                    this.UltimoMensajeIField = value;
                    this.RaisePropertyChanged("UltimoMensajeI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dirIp {
            get {
                return this.dirIpField;
            }
            set {
                if ((object.ReferenceEquals(this.dirIpField, value) != true)) {
                    this.dirIpField = value;
                    this.RaisePropertyChanged("dirIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int estado {
            get {
                return this.estadoField;
            }
            set {
                if ((this.estadoField.Equals(value) != true)) {
                    this.estadoField = value;
                    this.RaisePropertyChanged("estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public App.ServicioChat.Cliente pObjCliente {
            get {
                return this.pObjClienteField;
            }
            set {
                if ((object.ReferenceEquals(this.pObjClienteField, value) != true)) {
                    this.pObjClienteField = value;
                    this.RaisePropertyChanged("pObjCliente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public App.ServicioChat.Empleado pObjEmpleado {
            get {
                return this.pObjEmpleadoField;
            }
            set {
                if ((object.ReferenceEquals(this.pObjEmpleadoField, value) != true)) {
                    this.pObjEmpleadoField = value;
                    this.RaisePropertyChanged("pObjEmpleado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string zona {
            get {
                return this.zonaField;
            }
            set {
                if ((object.ReferenceEquals(this.zonaField, value) != true)) {
                    this.zonaField = value;
                    this.RaisePropertyChanged("zona");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Cliente", Namespace="http://schemas.datacontract.org/2004/07/ServicioChat")]
    [System.SerializableAttribute()]
    public partial class Cliente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailClienteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaIngresoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdClienteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreClienteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelClienteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailCliente {
            get {
                return this.EmailClienteField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailClienteField, value) != true)) {
                    this.EmailClienteField = value;
                    this.RaisePropertyChanged("EmailCliente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaIngreso {
            get {
                return this.FechaIngresoField;
            }
            set {
                if ((this.FechaIngresoField.Equals(value) != true)) {
                    this.FechaIngresoField = value;
                    this.RaisePropertyChanged("FechaIngreso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdCliente {
            get {
                return this.IdClienteField;
            }
            set {
                if ((this.IdClienteField.Equals(value) != true)) {
                    this.IdClienteField = value;
                    this.RaisePropertyChanged("IdCliente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreCliente {
            get {
                return this.NombreClienteField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreClienteField, value) != true)) {
                    this.NombreClienteField = value;
                    this.RaisePropertyChanged("NombreCliente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelCliente {
            get {
                return this.TelClienteField;
            }
            set {
                if ((object.ReferenceEquals(this.TelClienteField, value) != true)) {
                    this.TelClienteField = value;
                    this.RaisePropertyChanged("TelCliente");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Empleado", Namespace="http://schemas.datacontract.org/2004/07/ServicioChat")]
    [System.SerializableAttribute()]
    public partial class Empleado : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EstadoAtencionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdEmpleadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreEmpleadoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EstadoAtencion {
            get {
                return this.EstadoAtencionField;
            }
            set {
                if ((this.EstadoAtencionField.Equals(value) != true)) {
                    this.EstadoAtencionField = value;
                    this.RaisePropertyChanged("EstadoAtencion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdEmpleado {
            get {
                return this.IdEmpleadoField;
            }
            set {
                if ((this.IdEmpleadoField.Equals(value) != true)) {
                    this.IdEmpleadoField = value;
                    this.RaisePropertyChanged("IdEmpleado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreEmpleado {
            get {
                return this.NombreEmpleadoField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreEmpleadoField, value) != true)) {
                    this.NombreEmpleadoField = value;
                    this.RaisePropertyChanged("NombreEmpleado");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Mensaje", Namespace="http://schemas.datacontract.org/2004/07/ServicioChat")]
    [System.SerializableAttribute()]
    public partial class Mensaje : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LeidoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextoMensajeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TipoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string linkMsjField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Fecha {
            get {
                return this.FechaField;
            }
            set {
                if ((this.FechaField.Equals(value) != true)) {
                    this.FechaField = value;
                    this.RaisePropertyChanged("Fecha");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Leido {
            get {
                return this.LeidoField;
            }
            set {
                if ((this.LeidoField.Equals(value) != true)) {
                    this.LeidoField = value;
                    this.RaisePropertyChanged("Leido");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TextoMensaje {
            get {
                return this.TextoMensajeField;
            }
            set {
                if ((object.ReferenceEquals(this.TextoMensajeField, value) != true)) {
                    this.TextoMensajeField = value;
                    this.RaisePropertyChanged("TextoMensaje");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tipo {
            get {
                return this.TipoField;
            }
            set {
                if ((object.ReferenceEquals(this.TipoField, value) != true)) {
                    this.TipoField = value;
                    this.RaisePropertyChanged("Tipo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string linkMsj {
            get {
                return this.linkMsjField;
            }
            set {
                if ((object.ReferenceEquals(this.linkMsjField, value) != true)) {
                    this.linkMsjField = value;
                    this.RaisePropertyChanged("linkMsj");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ListaCliente", Namespace="http://schemas.datacontract.org/2004/07/ServicioChat")]
    [System.SerializableAttribute()]
    public partial class ListaCliente : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CalificacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailClienteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FechaAtencionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FechaFinalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FechaIngresoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdChatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreClienteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelClienteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UltimoMensajeEField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UltimoMensajeIField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string dirIpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int estadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string zonaField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Calificacion {
            get {
                return this.CalificacionField;
            }
            set {
                if ((this.CalificacionField.Equals(value) != true)) {
                    this.CalificacionField = value;
                    this.RaisePropertyChanged("Calificacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailCliente {
            get {
                return this.EmailClienteField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailClienteField, value) != true)) {
                    this.EmailClienteField = value;
                    this.RaisePropertyChanged("EmailCliente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FechaAtencion {
            get {
                return this.FechaAtencionField;
            }
            set {
                if ((this.FechaAtencionField.Equals(value) != true)) {
                    this.FechaAtencionField = value;
                    this.RaisePropertyChanged("FechaAtencion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FechaFinal {
            get {
                return this.FechaFinalField;
            }
            set {
                if ((this.FechaFinalField.Equals(value) != true)) {
                    this.FechaFinalField = value;
                    this.RaisePropertyChanged("FechaFinal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FechaIngreso {
            get {
                return this.FechaIngresoField;
            }
            set {
                if ((this.FechaIngresoField.Equals(value) != true)) {
                    this.FechaIngresoField = value;
                    this.RaisePropertyChanged("FechaIngreso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdChat {
            get {
                return this.IdChatField;
            }
            set {
                if ((this.IdChatField.Equals(value) != true)) {
                    this.IdChatField = value;
                    this.RaisePropertyChanged("IdChat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NombreCliente {
            get {
                return this.NombreClienteField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreClienteField, value) != true)) {
                    this.NombreClienteField = value;
                    this.RaisePropertyChanged("NombreCliente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TelCliente {
            get {
                return this.TelClienteField;
            }
            set {
                if ((object.ReferenceEquals(this.TelClienteField, value) != true)) {
                    this.TelClienteField = value;
                    this.RaisePropertyChanged("TelCliente");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UltimoMensajeE {
            get {
                return this.UltimoMensajeEField;
            }
            set {
                if ((this.UltimoMensajeEField.Equals(value) != true)) {
                    this.UltimoMensajeEField = value;
                    this.RaisePropertyChanged("UltimoMensajeE");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime UltimoMensajeI {
            get {
                return this.UltimoMensajeIField;
            }
            set {
                if ((this.UltimoMensajeIField.Equals(value) != true)) {
                    this.UltimoMensajeIField = value;
                    this.RaisePropertyChanged("UltimoMensajeI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string dirIp {
            get {
                return this.dirIpField;
            }
            set {
                if ((object.ReferenceEquals(this.dirIpField, value) != true)) {
                    this.dirIpField = value;
                    this.RaisePropertyChanged("dirIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int estado {
            get {
                return this.estadoField;
            }
            set {
                if ((this.estadoField.Equals(value) != true)) {
                    this.estadoField = value;
                    this.RaisePropertyChanged("estado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string zona {
            get {
                return this.zonaField;
            }
            set {
                if ((object.ReferenceEquals(this.zonaField, value) != true)) {
                    this.zonaField = value;
                    this.RaisePropertyChanged("zona");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioChat.IWebChat")]
    public interface IWebChat {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/Obtenerservicio", ReplyAction="http://tempuri.org/IWebChat/ObtenerservicioResponse")]
        int Obtenerservicio(string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/Obtenerservicio", ReplyAction="http://tempuri.org/IWebChat/ObtenerservicioResponse")]
        System.Threading.Tasks.Task<int> ObtenerservicioAsync(string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/pruebaarchivo", ReplyAction="http://tempuri.org/IWebChat/pruebaarchivoResponse")]
        string pruebaarchivo(string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/pruebaarchivo", ReplyAction="http://tempuri.org/IWebChat/pruebaarchivoResponse")]
        System.Threading.Tasks.Task<string> pruebaarchivoAsync(string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RegistrarUsuarioWeb", ReplyAction="http://tempuri.org/IWebChat/RegistrarUsuarioWebResponse")]
        void RegistrarUsuarioWeb(string pNombre, string pTelefono, string pEmail, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RegistrarUsuarioWeb", ReplyAction="http://tempuri.org/IWebChat/RegistrarUsuarioWebResponse")]
        System.Threading.Tasks.Task RegistrarUsuarioWebAsync(string pNombre, string pTelefono, string pEmail, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RegistrarUsuarioInterno", ReplyAction="http://tempuri.org/IWebChat/RegistrarUsuarioInternoResponse")]
        int RegistrarUsuarioInterno(int pid, string pNombre, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RegistrarUsuarioInterno", ReplyAction="http://tempuri.org/IWebChat/RegistrarUsuarioInternoResponse")]
        System.Threading.Tasks.Task<int> RegistrarUsuarioInternoAsync(int pid, string pNombre, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/CrearChat", ReplyAction="http://tempuri.org/IWebChat/CrearChatResponse")]
        int CrearChat(string pNombre, string pTelefono, string pEmail, string pIp, string zona, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/CrearChat", ReplyAction="http://tempuri.org/IWebChat/CrearChatResponse")]
        System.Threading.Tasks.Task<int> CrearChatAsync(string pNombre, string pTelefono, string pEmail, string pIp, string zona, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/CrearChat2", ReplyAction="http://tempuri.org/IWebChat/CrearChat2Response")]
        int CrearChat2(string pNombre, string pTelefono, string pEmail, string pIp, string zona, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/CrearChat2", ReplyAction="http://tempuri.org/IWebChat/CrearChat2Response")]
        System.Threading.Tasks.Task<int> CrearChat2Async(string pNombre, string pTelefono, string pEmail, string pIp, string zona, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/CrearMensaje", ReplyAction="http://tempuri.org/IWebChat/CrearMensajeResponse")]
        int CrearMensaje(int pIdChat, string pTipo, string pTextoMensaje, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/CrearMensaje", ReplyAction="http://tempuri.org/IWebChat/CrearMensajeResponse")]
        System.Threading.Tasks.Task<int> CrearMensajeAsync(int pIdChat, string pTipo, string pTextoMensaje, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RecibirMensajes", ReplyAction="http://tempuri.org/IWebChat/RecibirMensajesResponse")]
        App.ServicioChat.ListaMensaje[] RecibirMensajes(int pIdChat, string pTipo, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RecibirMensajes", ReplyAction="http://tempuri.org/IWebChat/RecibirMensajesResponse")]
        System.Threading.Tasks.Task<App.ServicioChat.ListaMensaje[]> RecibirMensajesAsync(int pIdChat, string pTipo, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerChat", ReplyAction="http://tempuri.org/IWebChat/ObtenerChatResponse")]
        App.ServicioChat.Chat ObtenerChat(int pIdChat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerChat", ReplyAction="http://tempuri.org/IWebChat/ObtenerChatResponse")]
        System.Threading.Tasks.Task<App.ServicioChat.Chat> ObtenerChatAsync(int pIdChat);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RegistraSalidaUsuarioWeb", ReplyAction="http://tempuri.org/IWebChat/RegistraSalidaUsuarioWebResponse")]
        int RegistraSalidaUsuarioWeb(int pidChat, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RegistraSalidaUsuarioWeb", ReplyAction="http://tempuri.org/IWebChat/RegistraSalidaUsuarioWebResponse")]
        System.Threading.Tasks.Task<int> RegistraSalidaUsuarioWebAsync(int pidChat, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/CerrarChat", ReplyAction="http://tempuri.org/IWebChat/CerrarChatResponse")]
        int CerrarChat(int pidChat, int pCalifica, string pComentario, string pUCierra, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/CerrarChat", ReplyAction="http://tempuri.org/IWebChat/CerrarChatResponse")]
        System.Threading.Tasks.Task<int> CerrarChatAsync(int pidChat, int pCalifica, string pComentario, string pUCierra, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RegistraSalidaUsuarioInterno", ReplyAction="http://tempuri.org/IWebChat/RegistraSalidaUsuarioInternoResponse")]
        int RegistraSalidaUsuarioInterno(int pid, string pComentario, string pUCierra, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RegistraSalidaUsuarioInterno", ReplyAction="http://tempuri.org/IWebChat/RegistraSalidaUsuarioInternoResponse")]
        System.Threading.Tasks.Task<int> RegistraSalidaUsuarioInternoAsync(int pid, string pComentario, string pUCierra, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/HabilitarUsuarioInterno", ReplyAction="http://tempuri.org/IWebChat/HabilitarUsuarioInternoResponse")]
        int HabilitarUsuarioInterno(int pid, int pestado, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/HabilitarUsuarioInterno", ReplyAction="http://tempuri.org/IWebChat/HabilitarUsuarioInternoResponse")]
        System.Threading.Tasks.Task<int> HabilitarUsuarioInternoAsync(int pid, int pestado, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerIdChatAtender", ReplyAction="http://tempuri.org/IWebChat/ObtenerIdChatAtenderResponse")]
        int ObtenerIdChatAtender(string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerIdChatAtender", ReplyAction="http://tempuri.org/IWebChat/ObtenerIdChatAtenderResponse")]
        System.Threading.Tasks.Task<int> ObtenerIdChatAtenderAsync(string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerListaClientes", ReplyAction="http://tempuri.org/IWebChat/ObtenerListaClientesResponse")]
        App.ServicioChat.ListaCliente[] ObtenerListaClientes(string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerListaClientes", ReplyAction="http://tempuri.org/IWebChat/ObtenerListaClientesResponse")]
        System.Threading.Tasks.Task<App.ServicioChat.ListaCliente[]> ObtenerListaClientesAsync(string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/verificar_chat", ReplyAction="http://tempuri.org/IWebChat/verificar_chatResponse")]
        int verificar_chat(int idChat, string pTipo, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/verificar_chat", ReplyAction="http://tempuri.org/IWebChat/verificar_chatResponse")]
        System.Threading.Tasks.Task<int> verificar_chatAsync(int idChat, string pTipo, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerNombre", ReplyAction="http://tempuri.org/IWebChat/ObtenerNombreResponse")]
        string ObtenerNombre(int pidChat, string pTipo, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerNombre", ReplyAction="http://tempuri.org/IWebChat/ObtenerNombreResponse")]
        System.Threading.Tasks.Task<string> ObtenerNombreAsync(int pidChat, string pTipo, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/verificarteclado", ReplyAction="http://tempuri.org/IWebChat/verificartecladoResponse")]
        int verificarteclado(int pidChat, string pTipo, int pestado, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/verificarteclado", ReplyAction="http://tempuri.org/IWebChat/verificartecladoResponse")]
        System.Threading.Tasks.Task<int> verificartecladoAsync(int pidChat, string pTipo, int pestado, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/AsignarChat", ReplyAction="http://tempuri.org/IWebChat/AsignarChatResponse")]
        int AsignarChat(int pIdChat, int pid, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/AsignarChat", ReplyAction="http://tempuri.org/IWebChat/AsignarChatResponse")]
        System.Threading.Tasks.Task<int> AsignarChatAsync(int pIdChat, int pid, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/UploadFile", ReplyAction="http://tempuri.org/IWebChat/UploadFileResponse")]
        void UploadFile(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/UploadFile", ReplyAction="http://tempuri.org/IWebChat/UploadFileResponse")]
        System.Threading.Tasks.Task UploadFileAsync(System.IO.Stream stream);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtieneRuta", ReplyAction="http://tempuri.org/IWebChat/ObtieneRutaResponse")]
        string ObtieneRuta(int pIdChat, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtieneRuta", ReplyAction="http://tempuri.org/IWebChat/ObtieneRutaResponse")]
        System.Threading.Tasks.Task<string> ObtieneRutaAsync(int pIdChat, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtieneRutaF", ReplyAction="http://tempuri.org/IWebChat/ObtieneRutaFResponse")]
        string ObtieneRutaF(string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtieneRutaF", ReplyAction="http://tempuri.org/IWebChat/ObtieneRutaFResponse")]
        System.Threading.Tasks.Task<string> ObtieneRutaFAsync(string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerListaEmpleados", ReplyAction="http://tempuri.org/IWebChat/ObtenerListaEmpleadosResponse")]
        App.ServicioChat.Empleado[] ObtenerListaEmpleados(string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerListaEmpleados", ReplyAction="http://tempuri.org/IWebChat/ObtenerListaEmpleadosResponse")]
        System.Threading.Tasks.Task<App.ServicioChat.Empleado[]> ObtenerListaEmpleadosAsync(string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerListaChats", ReplyAction="http://tempuri.org/IWebChat/ObtenerListaChatsResponse")]
        App.ServicioChat.Chat[] ObtenerListaChats(string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerListaChats", ReplyAction="http://tempuri.org/IWebChat/ObtenerListaChatsResponse")]
        System.Threading.Tasks.Task<App.ServicioChat.Chat[]> ObtenerListaChatsAsync(string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/cambiarEstado", ReplyAction="http://tempuri.org/IWebChat/cambiarEstadoResponse")]
        int cambiarEstado(int idEmp, int estado, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/cambiarEstado", ReplyAction="http://tempuri.org/IWebChat/cambiarEstadoResponse")]
        System.Threading.Tasks.Task<int> cambiarEstadoAsync(int idEmp, int estado, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerInfoCliente", ReplyAction="http://tempuri.org/IWebChat/ObtenerInfoClienteResponse")]
        App.ServicioChat.ListaCliente ObtenerInfoCliente(int pidChat, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerInfoCliente", ReplyAction="http://tempuri.org/IWebChat/ObtenerInfoClienteResponse")]
        System.Threading.Tasks.Task<App.ServicioChat.ListaCliente> ObtenerInfoClienteAsync(int pidChat, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerEstadoChat", ReplyAction="http://tempuri.org/IWebChat/ObtenerEstadoChatResponse")]
        int ObtenerEstadoChat(int pidChat, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerEstadoChat", ReplyAction="http://tempuri.org/IWebChat/ObtenerEstadoChatResponse")]
        System.Threading.Tasks.Task<int> ObtenerEstadoChatAsync(int pidChat, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerMensajaCierreChat", ReplyAction="http://tempuri.org/IWebChat/ObtenerMensajaCierreChatResponse")]
        string ObtenerMensajaCierreChat(int pidChat, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerMensajaCierreChat", ReplyAction="http://tempuri.org/IWebChat/ObtenerMensajaCierreChatResponse")]
        System.Threading.Tasks.Task<string> ObtenerMensajaCierreChatAsync(int pidChat, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerUsuarioCierraChat", ReplyAction="http://tempuri.org/IWebChat/ObtenerUsuarioCierraChatResponse")]
        string ObtenerUsuarioCierraChat(int pidChat, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerUsuarioCierraChat", ReplyAction="http://tempuri.org/IWebChat/ObtenerUsuarioCierraChatResponse")]
        System.Threading.Tasks.Task<string> ObtenerUsuarioCierraChatAsync(int pidChat, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerCalificacionChat", ReplyAction="http://tempuri.org/IWebChat/ObtenerCalificacionChatResponse")]
        int ObtenerCalificacionChat(int pidChat, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/ObtenerCalificacionChat", ReplyAction="http://tempuri.org/IWebChat/ObtenerCalificacionChatResponse")]
        System.Threading.Tasks.Task<int> ObtenerCalificacionChatAsync(int pidChat, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RegistraComentarioSalidaAgente", ReplyAction="http://tempuri.org/IWebChat/RegistraComentarioSalidaAgenteResponse")]
        int RegistraComentarioSalidaAgente(int pIdChat, string pComentario, string pass);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWebChat/RegistraComentarioSalidaAgente", ReplyAction="http://tempuri.org/IWebChat/RegistraComentarioSalidaAgenteResponse")]
        System.Threading.Tasks.Task<int> RegistraComentarioSalidaAgenteAsync(int pIdChat, string pComentario, string pass);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWebChatChannel : App.ServicioChat.IWebChat, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebChatClient : System.ServiceModel.ClientBase<App.ServicioChat.IWebChat>, App.ServicioChat.IWebChat {
        
        public WebChatClient() {
        }
        
        public WebChatClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebChatClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebChatClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebChatClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int Obtenerservicio(string pass) {
            return base.Channel.Obtenerservicio(pass);
        }
        
        public System.Threading.Tasks.Task<int> ObtenerservicioAsync(string pass) {
            return base.Channel.ObtenerservicioAsync(pass);
        }
        
        public string pruebaarchivo(string pass) {
            return base.Channel.pruebaarchivo(pass);
        }
        
        public System.Threading.Tasks.Task<string> pruebaarchivoAsync(string pass) {
            return base.Channel.pruebaarchivoAsync(pass);
        }
        
        public void RegistrarUsuarioWeb(string pNombre, string pTelefono, string pEmail, string pass) {
            base.Channel.RegistrarUsuarioWeb(pNombre, pTelefono, pEmail, pass);
        }
        
        public System.Threading.Tasks.Task RegistrarUsuarioWebAsync(string pNombre, string pTelefono, string pEmail, string pass) {
            return base.Channel.RegistrarUsuarioWebAsync(pNombre, pTelefono, pEmail, pass);
        }
        
        public int RegistrarUsuarioInterno(int pid, string pNombre, string pass) {
            return base.Channel.RegistrarUsuarioInterno(pid, pNombre, pass);
        }
        
        public System.Threading.Tasks.Task<int> RegistrarUsuarioInternoAsync(int pid, string pNombre, string pass) {
            return base.Channel.RegistrarUsuarioInternoAsync(pid, pNombre, pass);
        }
        
        public int CrearChat(string pNombre, string pTelefono, string pEmail, string pIp, string zona, string pass) {
            return base.Channel.CrearChat(pNombre, pTelefono, pEmail, pIp, zona, pass);
        }
        
        public System.Threading.Tasks.Task<int> CrearChatAsync(string pNombre, string pTelefono, string pEmail, string pIp, string zona, string pass) {
            return base.Channel.CrearChatAsync(pNombre, pTelefono, pEmail, pIp, zona, pass);
        }
        
        public int CrearChat2(string pNombre, string pTelefono, string pEmail, string pIp, string zona, string pass) {
            return base.Channel.CrearChat2(pNombre, pTelefono, pEmail, pIp, zona, pass);
        }
        
        public System.Threading.Tasks.Task<int> CrearChat2Async(string pNombre, string pTelefono, string pEmail, string pIp, string zona, string pass) {
            return base.Channel.CrearChat2Async(pNombre, pTelefono, pEmail, pIp, zona, pass);
        }
        
        public int CrearMensaje(int pIdChat, string pTipo, string pTextoMensaje, string pass) {
            return base.Channel.CrearMensaje(pIdChat, pTipo, pTextoMensaje, pass);
        }
        
        public System.Threading.Tasks.Task<int> CrearMensajeAsync(int pIdChat, string pTipo, string pTextoMensaje, string pass) {
            return base.Channel.CrearMensajeAsync(pIdChat, pTipo, pTextoMensaje, pass);
        }
        
        public App.ServicioChat.ListaMensaje[] RecibirMensajes(int pIdChat, string pTipo, string pass) {
            return base.Channel.RecibirMensajes(pIdChat, pTipo, pass);
        }
        
        public System.Threading.Tasks.Task<App.ServicioChat.ListaMensaje[]> RecibirMensajesAsync(int pIdChat, string pTipo, string pass) {
            return base.Channel.RecibirMensajesAsync(pIdChat, pTipo, pass);
        }
        
        public App.ServicioChat.Chat ObtenerChat(int pIdChat) {
            return base.Channel.ObtenerChat(pIdChat);
        }
        
        public System.Threading.Tasks.Task<App.ServicioChat.Chat> ObtenerChatAsync(int pIdChat) {
            return base.Channel.ObtenerChatAsync(pIdChat);
        }
        
        public int RegistraSalidaUsuarioWeb(int pidChat, string pass) {
            return base.Channel.RegistraSalidaUsuarioWeb(pidChat, pass);
        }
        
        public System.Threading.Tasks.Task<int> RegistraSalidaUsuarioWebAsync(int pidChat, string pass) {
            return base.Channel.RegistraSalidaUsuarioWebAsync(pidChat, pass);
        }
        
        public int CerrarChat(int pidChat, int pCalifica, string pComentario, string pUCierra, string pass) {
            return base.Channel.CerrarChat(pidChat, pCalifica, pComentario, pUCierra, pass);
        }
        
        public System.Threading.Tasks.Task<int> CerrarChatAsync(int pidChat, int pCalifica, string pComentario, string pUCierra, string pass) {
            return base.Channel.CerrarChatAsync(pidChat, pCalifica, pComentario, pUCierra, pass);
        }
        
        public int RegistraSalidaUsuarioInterno(int pid, string pComentario, string pUCierra, string pass) {
            return base.Channel.RegistraSalidaUsuarioInterno(pid, pComentario, pUCierra, pass);
        }
        
        public System.Threading.Tasks.Task<int> RegistraSalidaUsuarioInternoAsync(int pid, string pComentario, string pUCierra, string pass) {
            return base.Channel.RegistraSalidaUsuarioInternoAsync(pid, pComentario, pUCierra, pass);
        }
        
        public int HabilitarUsuarioInterno(int pid, int pestado, string pass) {
            return base.Channel.HabilitarUsuarioInterno(pid, pestado, pass);
        }
        
        public System.Threading.Tasks.Task<int> HabilitarUsuarioInternoAsync(int pid, int pestado, string pass) {
            return base.Channel.HabilitarUsuarioInternoAsync(pid, pestado, pass);
        }
        
        public int ObtenerIdChatAtender(string pass) {
            return base.Channel.ObtenerIdChatAtender(pass);
        }
        
        public System.Threading.Tasks.Task<int> ObtenerIdChatAtenderAsync(string pass) {
            return base.Channel.ObtenerIdChatAtenderAsync(pass);
        }
        
        public App.ServicioChat.ListaCliente[] ObtenerListaClientes(string pass) {
            return base.Channel.ObtenerListaClientes(pass);
        }
        
        public System.Threading.Tasks.Task<App.ServicioChat.ListaCliente[]> ObtenerListaClientesAsync(string pass) {
            return base.Channel.ObtenerListaClientesAsync(pass);
        }
        
        public int verificar_chat(int idChat, string pTipo, string pass) {
            return base.Channel.verificar_chat(idChat, pTipo, pass);
        }
        
        public System.Threading.Tasks.Task<int> verificar_chatAsync(int idChat, string pTipo, string pass) {
            return base.Channel.verificar_chatAsync(idChat, pTipo, pass);
        }
        
        public string ObtenerNombre(int pidChat, string pTipo, string pass) {
            return base.Channel.ObtenerNombre(pidChat, pTipo, pass);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerNombreAsync(int pidChat, string pTipo, string pass) {
            return base.Channel.ObtenerNombreAsync(pidChat, pTipo, pass);
        }
        
        public int verificarteclado(int pidChat, string pTipo, int pestado, string pass) {
            return base.Channel.verificarteclado(pidChat, pTipo, pestado, pass);
        }
        
        public System.Threading.Tasks.Task<int> verificartecladoAsync(int pidChat, string pTipo, int pestado, string pass) {
            return base.Channel.verificartecladoAsync(pidChat, pTipo, pestado, pass);
        }
        
        public int AsignarChat(int pIdChat, int pid, string pass) {
            return base.Channel.AsignarChat(pIdChat, pid, pass);
        }
        
        public System.Threading.Tasks.Task<int> AsignarChatAsync(int pIdChat, int pid, string pass) {
            return base.Channel.AsignarChatAsync(pIdChat, pid, pass);
        }
        
        public void UploadFile(System.IO.Stream stream) {
            base.Channel.UploadFile(stream);
        }
        
        public System.Threading.Tasks.Task UploadFileAsync(System.IO.Stream stream) {
            return base.Channel.UploadFileAsync(stream);
        }
        
        public string ObtieneRuta(int pIdChat, string pass) {
            return base.Channel.ObtieneRuta(pIdChat, pass);
        }
        
        public System.Threading.Tasks.Task<string> ObtieneRutaAsync(int pIdChat, string pass) {
            return base.Channel.ObtieneRutaAsync(pIdChat, pass);
        }
        
        public string ObtieneRutaF(string pass) {
            return base.Channel.ObtieneRutaF(pass);
        }
        
        public System.Threading.Tasks.Task<string> ObtieneRutaFAsync(string pass) {
            return base.Channel.ObtieneRutaFAsync(pass);
        }
        
        public App.ServicioChat.Empleado[] ObtenerListaEmpleados(string pass) {
            return base.Channel.ObtenerListaEmpleados(pass);
        }
        
        public System.Threading.Tasks.Task<App.ServicioChat.Empleado[]> ObtenerListaEmpleadosAsync(string pass) {
            return base.Channel.ObtenerListaEmpleadosAsync(pass);
        }
        
        public App.ServicioChat.Chat[] ObtenerListaChats(string pass) {
            return base.Channel.ObtenerListaChats(pass);
        }
        
        public System.Threading.Tasks.Task<App.ServicioChat.Chat[]> ObtenerListaChatsAsync(string pass) {
            return base.Channel.ObtenerListaChatsAsync(pass);
        }
        
        public int cambiarEstado(int idEmp, int estado, string pass) {
            return base.Channel.cambiarEstado(idEmp, estado, pass);
        }
        
        public System.Threading.Tasks.Task<int> cambiarEstadoAsync(int idEmp, int estado, string pass) {
            return base.Channel.cambiarEstadoAsync(idEmp, estado, pass);
        }
        
        public App.ServicioChat.ListaCliente ObtenerInfoCliente(int pidChat, string pass) {
            return base.Channel.ObtenerInfoCliente(pidChat, pass);
        }
        
        public System.Threading.Tasks.Task<App.ServicioChat.ListaCliente> ObtenerInfoClienteAsync(int pidChat, string pass) {
            return base.Channel.ObtenerInfoClienteAsync(pidChat, pass);
        }
        
        public int ObtenerEstadoChat(int pidChat, string pass) {
            return base.Channel.ObtenerEstadoChat(pidChat, pass);
        }
        
        public System.Threading.Tasks.Task<int> ObtenerEstadoChatAsync(int pidChat, string pass) {
            return base.Channel.ObtenerEstadoChatAsync(pidChat, pass);
        }
        
        public string ObtenerMensajaCierreChat(int pidChat, string pass) {
            return base.Channel.ObtenerMensajaCierreChat(pidChat, pass);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerMensajaCierreChatAsync(int pidChat, string pass) {
            return base.Channel.ObtenerMensajaCierreChatAsync(pidChat, pass);
        }
        
        public string ObtenerUsuarioCierraChat(int pidChat, string pass) {
            return base.Channel.ObtenerUsuarioCierraChat(pidChat, pass);
        }
        
        public System.Threading.Tasks.Task<string> ObtenerUsuarioCierraChatAsync(int pidChat, string pass) {
            return base.Channel.ObtenerUsuarioCierraChatAsync(pidChat, pass);
        }
        
        public int ObtenerCalificacionChat(int pidChat, string pass) {
            return base.Channel.ObtenerCalificacionChat(pidChat, pass);
        }
        
        public System.Threading.Tasks.Task<int> ObtenerCalificacionChatAsync(int pidChat, string pass) {
            return base.Channel.ObtenerCalificacionChatAsync(pidChat, pass);
        }
        
        public int RegistraComentarioSalidaAgente(int pIdChat, string pComentario, string pass) {
            return base.Channel.RegistraComentarioSalidaAgente(pIdChat, pComentario, pass);
        }
        
        public System.Threading.Tasks.Task<int> RegistraComentarioSalidaAgenteAsync(int pIdChat, string pComentario, string pass) {
            return base.Channel.RegistraComentarioSalidaAgenteAsync(pIdChat, pComentario, pass);
        }
    }
}
